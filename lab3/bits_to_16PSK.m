function X = bits_to_16PSK(b)

% maps bits to 16 PSK using constellation seen here:
% https://www.researchgate.net/figure/Gray-mapped-16-PSK-constellation-with-radius-c_fig3_3162047
%
%   The bits are mapped as follows:
%
%   '0000' --> exp(2*pi*j*0/16) = 1
%   '1000' --> exp(2*pi*j*1/16)
%   '1001' --> exp(2*pi*j*2/16)
%   '1011' --> exp(2*pi*j*3/16)
%   '1010' --> exp(2*pi*j*4/16)
%   '1110' --> exp(2*pi*j*5/16)
%   '1111' --> exp(2*pi*j*6/16)
%   '1101' --> exp(2*pi*j*7/16)
%   '1100' --> exp(2*pi*j*8/16) = -1
%   '0100' --> exp(2*pi*j*9/16)
%   '0101' --> exp(2*pi*j*10/16)
%   '0111' --> exp(2*pi*j*11/16)
%   '0110' --> exp(2*pi*j*12/16)
%   '0010' --> exp(2*pi*j*13/16)
%   '0011' --> exp(2*pi*j*14/16)
%   '0001' --> exp(2*pi*j*15/16)
%
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠰⡷⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘1010⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘1110⠃⡀⡀⡀⡀⡀⠹⠯⡏⠸⠇⡀⡀⡀⢀⢀⠘1011⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠃⣃⡃⠓⠁⡀⡀⡀⠘⡟⡀⡀⡀⡀⠘⠘⣏⡃⠘⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡄⢠⢠⡀⡄⡀⡀⡀⠉⠁⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⠉⠁⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘1111⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘1001⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘⠛⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘⠛⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⢀⢀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⢀⣀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⠘1101⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘1000⠃⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⠸⠇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠿⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⣀⢀⢀⣀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢀⡀⣀⣀⣀⡀⡀⡀⡀
%⢀⡀⡀⡀⡀⠘1100⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘0000⠃⡀⡀⡀⡀
%⠙⠋⠉⠉⠉⠉⠛⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⡏⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠙⠋⠉⠉⠉⠉⠛
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⠘0100⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘0001⠃⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⢠⡄⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⣤⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⠈⠁⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠉⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘0101⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘0011⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠙⢈⣘⠃⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠈⠉⢉⣈⡀⠁⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘⠛⡀⡀⡀⡀⡀⡀⢀⢀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⣀⢀⡀⡀⣀⡀⡀⡀⠘⠛⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠘0111⠃⡀⡀⡀⣄⣠⣇⢀⡄⡀⡀⠘0010⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠻⠃⡀⡀⡀⡀⠘0110⠃⡀⡀⡀⡀⠛⠃⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⠈⡏⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡇⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⢠⣧⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀⡀
%   
%   INPUT : b --> bit sequence of length N 
%
%   OUTPUT: X = exp( 2 * pi * i * m / 16 )
%             = cos(2pi*m/16) + i * sin(2pi*m/16) 
%           
%           where m = 0,1,...,15
%           for a total of N / 4 symbols
%           

l = length(b);

% we will have N/4 symbols total
X = zeros(l/4,1);

% counter
c = 1;

for k = 1 : 4 : l-3
    
    % b = '0000'
    if (b(k) == 0 && b(k+1) == 0 && b(k+2) == 0 && b(k+3) == 0)
        X(c) = 1;
        c = c + 1;
    end
    

    % b = '1000'
    if (b(k) == 1 && b(k+1) == 0 && b(k+2) == 0 && b(k+3) == 0)
        X(c) = exp(2*pi*1i*1/16);
        c = c + 1;
    end


    % b = '1001'
    if (b(k) == 1 && b(k+1) == 0 && b(k+2) == 0 && b(k+3) == 1)
        X(c) = exp(2*pi*1i*2/16);
        c = c + 1;
    end


    % b = '1011'
    if (b(k) == 1 && b(k+1) == 0 && b(k+2) == 1 && b(k+3) == 1)
        X(c) = exp(2*pi*1i*3/16);
        c = c + 1;
    end


    % b = '1010'
    if (b(k) == 1 && b(k+1) == 0 && b(k+2) == 1 && b(k+3) == 0)
        X(c) = exp(2*pi*1i*4/16);
        c = c + 1;
    end


    % b = '1110'
    if (b(k) == 1 && b(k+1) == 1 && b(k+2) == 1 && b(k+3) == 0)
        X(c) = exp(2*pi*1i*5/16);
        c = c + 1;
    end


    % b = '1111'
    if (b(k) == 1 && b(k+1) == 1 && b(k+2) == 1 && b(k+3) == 1)
        X(c) = exp(2*pi*1i*6/16);
        c = c + 1;
    end


    % b = '1101'
    if (b(k) == 1 && b(k+1) == 1 && b(k+2) == 0 && b(k+3) == 1)
        X(c) = exp(2*pi*1i*7/16);
        c = c + 1;
    end
    

    % b = '1100'
    if (b(k) == 1 && b(k+1) == 1 && b(k+2) == 0 && b(k+3) == 0)
        X(c) = -1;
        c = c + 1;
    end


    % b = '0100'
    if (b(k) == 0 && b(k+1) == 1 && b(k+2) == 0 && b(k+3) == 0)
        X(c) = exp(2*pi*1i*9/16);
        c = c + 1;
    end


    % b = '0101'
    if (b(k) == 0 && b(k+1) == 1 && b(k+2) == 0 && b(k+3) == 1)
        X(c) = exp(2*pi*1i*10/16);
        c = c + 1;
    end

    % b = '0111'
    if (b(k) == 0 && b(k+1) == 1 && b(k+2) == 1 && b(k+3) == 1)
        X(c) = exp(2*pi*1i*11/16);
        c = c + 1;
    end

    % b = '0110'
    if (b(k) == 0 && b(k+1) == 1 && b(k+2) == 1 && b(k+3) == 0)
        X(c) = exp(2*pi*1i*12/16);
        c = c + 1;
    end


    % b = '0010'
    if (b(k) == 0 && b(k+1) == 0 && b(k+2) == 1 && b(k+3) == 0)
        X(c) = exp(2*pi*1i*13/16);
        c = c + 1;
    end


    % b = '0011'
    if (b(k) == 0 && b(k+1) == 0 && b(k+2) == 1 && b(k+3) == 1)
        X(c) = exp(2*pi*1i*14/16);
        c = c + 1;
    end


    % b = '0001'
    if (b(k) == 0 && b(k+1) == 0 && b(k+2) == 0 && b(k+3) == 1)
        X(c) = exp(2*pi*1i*15/16);
        c = c + 1;
    end

end

% euler's formula
% Xi_n = real(X);
% Xq_n = imag(X);


end